Grammar

    0 $accept: command $end

    1 command: list NEWLINE
    2        | list '<' FNAME NEWLINE
    3        | list '>' FNAME NEWLINE
    4        | list '<' FNAME '>' FNAME NEWLINE
    5        | list '>' FNAME '<' FNAME NEWLINE
    6        | error

    7 list: expr ';' list
    8     | expr '&' list
    9     | expr

   10 expr: pipe AND expr
   11     | pipe OR expr
   12     | pipe

   13 pipe: simple '|' pipe
   14     | simple

   15 simple: CD FNAME
   16       | EXIT
   17       | fnamelist
   18       | /* empty */
   19       | '(' list ')'

   20 fnamelist: FNAME fnamelist
   21          | FNAME


Terminals, with rules where they appear

$end (0) 0
'&' (38) 8
'(' (40) 19
')' (41) 19
';' (59) 7
'<' (60) 2 4 5
'>' (62) 3 4 5
'|' (124) 13
error (256) 6
CD (258) 15
EXIT (259) 16
FNAME (260) 2 3 4 5 15 20 21
NEWLINE (261) 1 2 3 4 5
AND (262) 10
OR (263) 11


Nonterminals, with rules where they appear

$accept (16)
    on left: 0
command (17)
    on left: 1 2 3 4 5 6, on right: 0
list (18)
    on left: 7 8 9, on right: 1 2 3 4 5 7 8 19
expr (19)
    on left: 10 11 12, on right: 7 8 9 10 11
pipe (20)
    on left: 13 14, on right: 10 11 12 13
simple (21)
    on left: 15 16 17 18 19, on right: 13 14
fnamelist (22)
    on left: 20 21, on right: 17 20


state 0

    0 $accept: . command $end

    error  shift, and go to state 1
    CD     shift, and go to state 2
    EXIT   shift, and go to state 3
    FNAME  shift, and go to state 4
    '('    shift, and go to state 5

    NEWLINE  reduce using rule 18 (simple)
    AND      reduce using rule 18 (simple)
    OR       reduce using rule 18 (simple)
    '<'      reduce using rule 18 (simple)
    '>'      reduce using rule 18 (simple)
    ';'      reduce using rule 18 (simple)
    '&'      reduce using rule 18 (simple)
    '|'      reduce using rule 18 (simple)

    command    go to state 6
    list       go to state 7
    expr       go to state 8
    pipe       go to state 9
    simple     go to state 10
    fnamelist  go to state 11


state 1

    6 command: error .

    $default  reduce using rule 6 (command)


state 2

   15 simple: CD . FNAME

    FNAME  shift, and go to state 12


state 3

   16 simple: EXIT .

    $default  reduce using rule 16 (simple)


state 4

   20 fnamelist: FNAME . fnamelist
   21          | FNAME .

    FNAME  shift, and go to state 4

    $default  reduce using rule 21 (fnamelist)

    fnamelist  go to state 13


state 5

   19 simple: '(' . list ')'

    CD     shift, and go to state 2
    EXIT   shift, and go to state 3
    FNAME  shift, and go to state 4
    '('    shift, and go to state 5

    $default  reduce using rule 18 (simple)

    list       go to state 14
    expr       go to state 8
    pipe       go to state 9
    simple     go to state 10
    fnamelist  go to state 11


state 6

    0 $accept: command . $end

    $end  shift, and go to state 15


state 7

    1 command: list . NEWLINE
    2        | list . '<' FNAME NEWLINE
    3        | list . '>' FNAME NEWLINE
    4        | list . '<' FNAME '>' FNAME NEWLINE
    5        | list . '>' FNAME '<' FNAME NEWLINE

    NEWLINE  shift, and go to state 16
    '<'      shift, and go to state 17
    '>'      shift, and go to state 18


state 8

    7 list: expr . ';' list
    8     | expr . '&' list
    9     | expr .

    ';'  shift, and go to state 19
    '&'  shift, and go to state 20

    $default  reduce using rule 9 (list)


state 9

   10 expr: pipe . AND expr
   11     | pipe . OR expr
   12     | pipe .

    AND  shift, and go to state 21
    OR   shift, and go to state 22

    $default  reduce using rule 12 (expr)


state 10

   13 pipe: simple . '|' pipe
   14     | simple .

    '|'  shift, and go to state 23

    $default  reduce using rule 14 (pipe)


state 11

   17 simple: fnamelist .

    $default  reduce using rule 17 (simple)


state 12

   15 simple: CD FNAME .

    $default  reduce using rule 15 (simple)


state 13

   20 fnamelist: FNAME fnamelist .

    $default  reduce using rule 20 (fnamelist)


state 14

   19 simple: '(' list . ')'

    ')'  shift, and go to state 24


state 15

    0 $accept: command $end .

    $default  accept


state 16

    1 command: list NEWLINE .

    $default  reduce using rule 1 (command)


state 17

    2 command: list '<' . FNAME NEWLINE
    4        | list '<' . FNAME '>' FNAME NEWLINE

    FNAME  shift, and go to state 25


state 18

    3 command: list '>' . FNAME NEWLINE
    5        | list '>' . FNAME '<' FNAME NEWLINE

    FNAME  shift, and go to state 26


state 19

    7 list: expr ';' . list

    CD     shift, and go to state 2
    EXIT   shift, and go to state 3
    FNAME  shift, and go to state 4
    '('    shift, and go to state 5

    $default  reduce using rule 18 (simple)

    list       go to state 27
    expr       go to state 8
    pipe       go to state 9
    simple     go to state 10
    fnamelist  go to state 11


state 20

    8 list: expr '&' . list

    CD     shift, and go to state 2
    EXIT   shift, and go to state 3
    FNAME  shift, and go to state 4
    '('    shift, and go to state 5

    $default  reduce using rule 18 (simple)

    list       go to state 28
    expr       go to state 8
    pipe       go to state 9
    simple     go to state 10
    fnamelist  go to state 11


state 21

   10 expr: pipe AND . expr

    CD     shift, and go to state 2
    EXIT   shift, and go to state 3
    FNAME  shift, and go to state 4
    '('    shift, and go to state 5

    $default  reduce using rule 18 (simple)

    expr       go to state 29
    pipe       go to state 9
    simple     go to state 10
    fnamelist  go to state 11


state 22

   11 expr: pipe OR . expr

    CD     shift, and go to state 2
    EXIT   shift, and go to state 3
    FNAME  shift, and go to state 4
    '('    shift, and go to state 5

    $default  reduce using rule 18 (simple)

    expr       go to state 30
    pipe       go to state 9
    simple     go to state 10
    fnamelist  go to state 11


state 23

   13 pipe: simple '|' . pipe

    CD     shift, and go to state 2
    EXIT   shift, and go to state 3
    FNAME  shift, and go to state 4
    '('    shift, and go to state 5

    $default  reduce using rule 18 (simple)

    pipe       go to state 31
    simple     go to state 10
    fnamelist  go to state 11


state 24

   19 simple: '(' list ')' .

    $default  reduce using rule 19 (simple)


state 25

    2 command: list '<' FNAME . NEWLINE
    4        | list '<' FNAME . '>' FNAME NEWLINE

    NEWLINE  shift, and go to state 32
    '>'      shift, and go to state 33


state 26

    3 command: list '>' FNAME . NEWLINE
    5        | list '>' FNAME . '<' FNAME NEWLINE

    NEWLINE  shift, and go to state 34
    '<'      shift, and go to state 35


state 27

    7 list: expr ';' list .

    $default  reduce using rule 7 (list)


state 28

    8 list: expr '&' list .

    $default  reduce using rule 8 (list)


state 29

   10 expr: pipe AND expr .

    $default  reduce using rule 10 (expr)


state 30

   11 expr: pipe OR expr .

    $default  reduce using rule 11 (expr)


state 31

   13 pipe: simple '|' pipe .

    $default  reduce using rule 13 (pipe)


state 32

    2 command: list '<' FNAME NEWLINE .

    $default  reduce using rule 2 (command)


state 33

    4 command: list '<' FNAME '>' . FNAME NEWLINE

    FNAME  shift, and go to state 36


state 34

    3 command: list '>' FNAME NEWLINE .

    $default  reduce using rule 3 (command)


state 35

    5 command: list '>' FNAME '<' . FNAME NEWLINE

    FNAME  shift, and go to state 37


state 36

    4 command: list '<' FNAME '>' FNAME . NEWLINE

    NEWLINE  shift, and go to state 38


state 37

    5 command: list '>' FNAME '<' FNAME . NEWLINE

    NEWLINE  shift, and go to state 39


state 38

    4 command: list '<' FNAME '>' FNAME NEWLINE .

    $default  reduce using rule 4 (command)


state 39

    5 command: list '>' FNAME '<' FNAME NEWLINE .

    $default  reduce using rule 5 (command)
